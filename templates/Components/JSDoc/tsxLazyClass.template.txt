// Lazy Component - ${name}.tsx
/** 
 *  @filename: react.js 
 *  @param {Object} Component -  Imports React Component
 *  @param {Function} lazy -  Imports React Lazy Component
 */
import React, { Component,lazy } from 'react';
/** @filename: ${name}.css */
import './${name}.css'

// React Lazy function
/**
 * @function 
 * @typedef {} 
 * @return {}
 */
// const  = React.lazy(() => import(''))

// Defining the  Prop Types
interface ${name}Props {
 /**
  * @type {} 
  */
}

/**
 * @class ${name} - Component
 * @template react
 * @extends {Component}
 * @constructor 
 * @param {} 
 * @return {}
 */

class ${name} extends Component<${name}Props> {
  constructor(props){
    super(props)
  }
  render() {
    return (
      <>

      </>
    );
  }
}
/**
 * @export ${name}
 */
export default ${name}

/**
 * For more information on using JSDocs With
 * Typescript, visit: https://bit.ly/37VcSBj
 * For more information about using JSDocs with React Components
 * https://react-styleguidist.js.org/docs/documenting/
 */ 